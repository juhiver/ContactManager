{"version":3,"sources":["Context.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/Header.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Contacts/EditContact.js","Components/Pages/About.js","Components/Pages/NotFound.js","Components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","Link","to","style","cursor","float","color","marginLeft","onClick","bind","Contacts","Fragment","Contacts_Contact","Header","branding","href","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","Layout_TextInputGroup","EditContact","updateContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","Context_Provider","HashRouter","border","Layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30860e53.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact => contact.id === action.payload.id ? (contact = action.payload) : contact\r\n                )\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    state = {\r\n\r\n        contacts: [\r\n\r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({ contacts: res.data });\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n\r\n    /* onShowClick = e => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    }; */\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(\r\n                `https://jsonplaceholder.typicode.com/users/${id}`\r\n            );\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n        catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n\r\n\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (<Consumer>{\r\n            value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card card-body mb-3 text-left\">\r\n                        <h4>\r\n                            Name : {name}{''}\r\n\r\n                            <Link to={`Contact/edit/${id}`}>\r\n                                <i className=\"fas fa-pencil-alt\" style={{\r\n                                    cursor: 'pointer', float: \"right\", color: 'black', marginLeft: '2rem'\r\n                                }}></i>\r\n                            </Link>\r\n\r\n                            <i className=\"fas fa-trash\" style={{\r\n                                cursor: 'pointer', float: \"right\", color: 'red',\r\n                            }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n\r\n\r\n\r\n                            <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                                className='fas fa-sort-down ' style={{ cursor: 'Pointer' }}></i>\r\n\r\n                        </h4>\r\n                        {\r\n                            showContactInfo ? (\r\n                                < ul className=\"list-group\">\r\n                                    <li className=\"list-group-item \">Email : {email}</li>\r\n                                    <li className=\"list-group-item \">PhoneNumber : {phone}</li>\r\n                                </ul>) : null\r\n                        }\r\n\r\n                    </div >\r\n                );\r\n            }}</Consumer>)\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: propTypes.string.isRequired,\r\n\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context'\r\n\r\nclass Contacts extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact List</span>\r\n\r\n                            </h1>\r\n                            {\r\n                                contacts.map(contact => (\r\n                                    <Contact\r\n                                        key={contact.id}\r\n                                        contact={contact}\r\n                                    //deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                                    />\r\n\r\n                                ))\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;","import React from 'react'\r\nimport propTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\r\n        <div className=\"container\">   \r\n            <a href=\"\\\" className='navbar-brand'>{branding}</a>\r\n        \r\n            <ul className=\"navbar-nav mr\">\r\n                <li className=\"nav-item\">\r\n                     <Link to =\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/> Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                     <Link to =\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/> About</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                     <Link to =\"/Contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/> Add</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n\r\n    )\r\n}\r\n/* Header.defaultProps = {\r\n    branding: \"MyApp\"\r\n}; */\r\nHeader.propTypes = {\r\n    branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n    branding: propTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup = (\r\n    {\r\n        label,\r\n        name,\r\n        value,\r\n        placeholder,\r\n        type,\r\n        onChange,\r\n        error,\r\n    }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg',\r\n                    { 'is-invalid': error })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange} />\r\n            {error && < div className=\"invalid-feedback\">{error}</div>}\r\n        </div >\r\n    )\r\n}\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\n\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        //check for errors\r\n        if (name === \"\") {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n        if (email === \"\") {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n        if (phone === \"\") {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n        const newContact = {\r\n\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (<Consumer>\r\n            {\r\n                value => {\r\n                    const { dispatch } = value;\r\n\r\n\r\n                    return (\r\n                        <div className=\"rounded mb-3\">\r\n                            <div className=\"card-header \">\r\n                                <h4>Add Contact</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name} />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        value={email}\r\n                                        type=\"email\"\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email} />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone} />\r\n\r\n\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn  btn-success\"></input>\r\n\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div >\r\n                    )\r\n                }\r\n            }\r\n        </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\n\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        //check for errors\r\n        if (name === \"\") {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n        if (email === \"\") {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n        if (phone === \"\") {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (<Consumer>\r\n            {\r\n                value => {\r\n                    const { dispatch } = value;\r\n\r\n\r\n                    return (\r\n                        <div className=\"rounded mb-3\">\r\n                            <div className=\"card-header \">\r\n                                <h4>Edit Contact</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name} />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        value={email}\r\n                                        type=\"email\"\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email} />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone} />\r\n\r\n\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn  btn-success\"></input>\r\n\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div >\r\n                    )\r\n                }\r\n            }\r\n        </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404</span> Page not found\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            })\r\n\r\n            );\r\n\r\n\r\n    }\r\n    /* componentWillMount() {\r\n        console.log('Component will mount');\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('Component did update');\r\n    }\r\n    componentWillUpdate() {\r\n        console.log('Component will update');\r\n    }\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log('Component will Recieve');\r\n    }\r\n    static getDerivedStateFromPages(nextProps, prevState) {\r\n\r\n    }\r\n    getSnapshotBeforeUpdate(nextProps, prevState) {\r\n\r\n    } */\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Test Component </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React, { Component } from \"react\";\nimport Contacts from './Components/Contacts/Contacts';\nimport Header from './Components/Layout/Header';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './Context';\nimport AddContact from './Components/Contacts/AddContact';\nimport EditContact from './Components/Contacts/EditContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './Components/Pages/About';\nimport NotFound from './Components/Pages/NotFound';\nimport Test from './Components/Test/Test';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\" style={{ border: 'double' }}>\n\n            <Header branding=\"Contact Manager\" />\n            <div className=\"Container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/Contact/add\" component={AddContact} />\n                <Route exact path=\"/Contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n\n\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}